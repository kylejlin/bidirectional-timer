{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","time","direction","stopTime","last","Date","now","isPauseMenuOpen","isTimerMenuOpen","bindListeners","startOrReverseTimer","bind","updateTime","pause","resume","openTimerMenu","closeTimerMenu","resetTimer","setPendingStopTime","populatePendingStopTime","applyAndClearPendingStopTime","_this$state","Math","abs","renderRunning","renderStopped","sign","react_default","a","createElement","className","concat","color","onClick","timeString","CircleButton","text","smallTextEnabled","type","value","pendingStopTime","onChange","onFocus","onBlur","_this$state2","setState","nonZeroSign","prevState","requestAnimationFrame","delta","zeroFromSign","e","target","str","toLowerCase","Infinity","split","length","_split","slicedToArray","minStr","secStr","_ref2","parseInt","parseFloat","minutes","seconds","NaN","parseTime","React","Component","_ref","_ref$smallTextEnabled","number","is","TypeError","millis","totalSeconds","floor","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.99c7c422.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      time: 0,\n      direction: -0,\n      stopTime: 30 * 1e3,\n      last: Date.now(),\n      isPauseMenuOpen: false,\n      isTimerMenuOpen: false,\n    };\n\n    this.bindListeners();\n  }\n\n  bindListeners() {\n    this.startOrReverseTimer = this.startOrReverseTimer.bind(this);\n    this.updateTime = this.updateTime.bind(this);\n    this.pause = this.pause.bind(this);\n    this.resume = this.resume.bind(this);\n    this.openTimerMenu = this.openTimerMenu.bind(this);\n    this.closeTimerMenu = this.closeTimerMenu.bind(this);\n    this.resetTimer = this.resetTimer.bind(this);\n    this.setPendingStopTime = this.setPendingStopTime.bind(this);\n    this.populatePendingStopTime = this.populatePendingStopTime.bind(this);\n    this.applyAndClearPendingStopTime = this.applyAndClearPendingStopTime.bind(\n      this\n    );\n  }\n\n  render() {\n    const { time, stopTime } = this.state;\n    if (Math.abs(time) < stopTime) {\n      return this.renderRunning();\n    } else {\n      return this.renderStopped();\n    }\n  }\n\n  renderRunning() {\n    const { time } = this.state;\n    const sign = time < 0 ? \"-\" : \"+\";\n    return (\n      <div className={`App App--${this.color()}`}>\n        <div className=\"Time\" onClick={this.startOrReverseTimer}>\n          {sign}\n          {timeString(time)}\n        </div>\n\n        {this.state.direction === 0 ? (\n          <div className=\"PauseMenu\">\n            <CircleButton text=\"▶\" onClick={this.resume} />\n            <CircleButton\n              text=\"1:23\"\n              smallTextEnabled\n              onClick={this.openTimerMenu}\n            />\n          </div>\n        ) : (\n          <div className=\"OpenPauseMenuButtonContainer\">\n            <CircleButton text=\"||\" onClick={this.pause} />\n          </div>\n        )}\n\n        {this.state.isTimerMenuOpen && (\n          <div className=\"TimerMenu\">\n            <div className=\"CloseTimerMenuButtonContainer\">\n              <CircleButton text=\"X\" onClick={this.closeTimerMenu} />\n            </div>\n            <label>\n              Stop time:\n              <input\n                type=\"text\"\n                value={this.state.pendingStopTime}\n                onChange={this.setPendingStopTime}\n                onFocus={this.populatePendingStopTime}\n                onBlur={this.applyAndClearPendingStopTime}\n              />\n            </label>\n            <span>\n              Reset current time\n              <CircleButton text=\"↺\" onClick={this.resetTimer} />\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  renderStopped() {\n    const { time, stopTime } = this.state;\n    const sign = time < 0 ? \"-\" : \"+\";\n    return (\n      <div className={`App App--${this.color()}`}>\n        <div className=\"Time Time--stopped\">\n          {sign}\n          {timeString(stopTime)}\n        </div>\n\n        <div className=\"ResetStoppedTimerButtonContainer\">\n          <CircleButton text=\"↺\" onClick={this.resetTimer} />\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.updateTime();\n  }\n\n  startOrReverseTimer() {\n    if (this.state.direction === 0) {\n      this.setState({\n        direction: nonZeroSign(this.state.direction),\n        last: Date.now(),\n      });\n    } else {\n      this.setState((prevState) => ({\n        direction: -prevState.direction,\n        last: Date.now(),\n      }));\n    }\n  }\n\n  updateTime() {\n    requestAnimationFrame(this.updateTime);\n    this.setState((prevState) => {\n      const now = Date.now();\n      const delta = now - prevState.last;\n      return {\n        time: prevState.time + delta * prevState.direction,\n        last: now,\n      };\n    });\n  }\n\n  pause() {\n    this.setState({\n      direction: zeroFromSign(this.state.direction),\n    });\n  }\n\n  resume() {\n    this.setState({\n      direction: nonZeroSign(this.state.direction),\n    });\n  }\n\n  openTimerMenu() {\n    this.setState({\n      isTimerMenuOpen: true,\n      pendingStopTime: timeString(this.state.stopTime),\n    });\n  }\n\n  closeTimerMenu() {\n    this.setState({ isTimerMenuOpen: false });\n  }\n\n  resetTimer() {\n    this.setState({\n      time: 0,\n      direction: -0,\n      isTimerMenuOpen: false,\n    });\n  }\n\n  setPendingStopTime(e) {\n    this.setState({\n      pendingStopTime: e.target.value,\n    });\n  }\n\n  populatePendingStopTime() {\n    this.setState({\n      pendingStopTime: timeString(this.state.stopTime),\n    });\n  }\n\n  applyAndClearPendingStopTime() {\n    const stopTime =\n      parseTime(this.state.pendingStopTime) || this.state.stopTime;\n\n    this.setState({\n      pendingStopTime: timeString(stopTime),\n      stopTime,\n    });\n  }\n\n  color() {\n    if (nonZeroSign(this.state.direction) > 0) {\n      return \"black\";\n    } else {\n      return \"white\";\n    }\n  }\n}\n\nfunction CircleButton({ onClick, smallTextEnabled = false, text }) {\n  return (\n    <button\n      className={\n        \"CircleButton\" + (smallTextEnabled ? \" CircleButton--small-text\" : \"\")\n      }\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n}\n\nfunction leftpadSeconds(str) {\n  if (str.length === 2) {\n    return str;\n  } else {\n    return \"0\" + str;\n  }\n}\n\nfunction nonZeroSign(number) {\n  if (number > 0) {\n    return 1;\n  } else if (number < 0) {\n    return -1;\n  } else if (Object.is(-0, number)) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\nfunction zeroFromSign(sign) {\n  if (sign > 0) {\n    return +0;\n  } else if (sign < 0) {\n    return -0;\n  } else {\n    throw new TypeError(\"Sign must be either greater than or less than zero.\");\n  }\n}\n\nfunction timeString(millis) {\n  const totalSeconds = Math.floor(Math.abs(millis) * 1e-3);\n  const minutes = \"\" + Math.floor(totalSeconds / 60);\n  const seconds = leftpadSeconds(\"\" + (totalSeconds % 60));\n  return minutes + \":\" + seconds;\n}\n\nfunction parseTime(str) {\n  if (\"infinity\" === str.toLowerCase()) {\n    return Infinity;\n  }\n\n  const split = str.split(\":\");\n  if (split.length === 2) {\n    const [minStr, secStr] = split;\n    const [minutes, seconds] = [parseInt(minStr, 10), parseFloat(secStr, 10)];\n    return 1e3 * (minutes * 60 + seconds);\n  } else {\n    return NaN;\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}